Master Thesis Project Philip Salomons i6154933 
Learning to Branch on the Capacitated Vehicle Routing Problem 

**--**--**--**--**--**--**--**--**--**--**--**--**--**--**--**--**--**--**
**--**--**--**--**--**--       LOG File           ---**--**--**--**--**--**

R: 3
Starting...
Creating CPLEX instance!

Number of customers: 21
Sum of all demands: 806
Capacity: 120
KMin: 6

Version identifier: 22.1.1.0 | 2022-11-28 | 9160aff4d
CPXPARAM_MIP_Cuts_Cliques                        -1
CPXPARAM_MIP_Cuts_Covers                         -1
CPXPARAM_MIP_Cuts_FlowCovers                     -1
CPXPARAM_MIP_Cuts_Implied                        -1
CPXPARAM_MIP_Cuts_Gomory                         -1
CPXPARAM_MIP_Cuts_PathCut                        -1
CPXPARAM_MIP_Cuts_MIRCut                         -1
CPXPARAM_MIP_Cuts_ZeroHalfCut                    -1
CPXPARAM_MIP_Cuts_LiftProj                       -1
CPXPARAM_MIP_Strategy_HeuristicFreq              -1
CPXPARAM_TimeLimit                               60
Generic callback                                 0x20
Lazy constraint(s) or lazy constraint/branch callback is present.
    Disabling dual reductions (CPX_PARAM_REDUCE) in presolve.
    Disabling presolve reductions that prevent crushing forms (CPX_PARAM_PREREFORM).
Tried aggregator 2 times.
MIP Presolve eliminated 0 rows and 21 columns.
Aggregator did 190 substitutions.
Reduced MIP has 42 rows, 230 columns, and 840 nonzeros.
Reduced MIP has 210 binaries, 20 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.60 ticks)
Probing time = 0.00 sec. (0.12 ticks)
Cover probing fixed 0 vars, tightened 20 bounds.
Tried aggregator 1 time.
Reduced MIP has 42 rows, 230 columns, and 840 nonzeros.
Reduced MIP has 230 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.20 ticks)
Probing time = 0.00 sec. (0.05 ticks)
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 4 threads.
Root relaxation solution time = 0.00 sec. (0.17 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

      0     0    14876.0000     6                  14876.0000       28         
      0     2    14876.0000     6                  14876.0000       28         
Elapsed time = 0.02 sec. (1.61 ticks, tree = 0.02 MB, solutions = 0)
CUUUUUUUUUUTTTT

Vector:
1
16
2
19
17
Demand: 237
CUUUUUUUUUUTTTT

Vector:
3
5
Demand: 48

Vector:
1
16
2
19
17
Demand: 237
Demand: 237

Vector:
4
12
Demand: 63

Vector:
3
ctor:

Ve4
ctor:
6
De8
mand: 37
8
Demand: 162

Vector:
5
ctor:

Ve12
tor:
7

De10
and: 74
10
15
13
11
Demand: 113

Vector:
6
Adding RCI: 8
Demand: 162
8
TDemand: 162

Vector:
7
10
15
13
11

VecKK(S): 
7
10
15
0.941667
K(S13
): 1
13
11
Demand: 113
Adding RCI: 

dding RCI: 

VVector:
9
ctor:
7
2010
Dem15
and: 43
15
13
11
KK(S): 0.941667
K(S): 1

Vector:
14
18
Demand: 140

Vector:
9
20
Demand: 43

Vector:
14
18
Demand: 140
CUUUUUUUUUUTTTT

Vector:
1
16
2
19
17
10
13
11
15
7
Demand: 350
CUUUUUUUUUUTTTT
CUUUUUUUUUUTTTT
CUUUUUUUUUUTTTT

Vector:
3
5
Demand: 48
Demand: 48

Vector:
1
14
18
DemaVector:
203
Vector:
203

Vector:
Vector:
4
1812
14
DemaVecDemand: 203Demand: 2
mand: 203
2
15
16
11
19
13
17
7
10
Demand: 287

Vector:
6
8
Demand: 162

Vector:
2
16
17
19
Demand: 174

Vector:
9
20
Demand: 43
Adding RCI: 

VeVector:
2
ctor:
3
16
Ve4
c17
tor:
14Dem19
18
and: 37
18
KK(Demand: 140
Demand: 140
1.45
K(S): 2

Vector:
5
12
Demand: 74
*    20     9      integral     0    15454.0000    15066.8000       53    2.51%

VeVector:
3
ctor:
6
5
8
Demand: 162

e
Vector:
48
Vector:
9
20
Demand: 43

Vector:
4
12
Demand: 63

Vector:
6
8
Demand: 162

Vector:
7
10
11
15
13
Demand: 113

Vector:
9
20
Demand: 43
CUUUUUUUUUUTTTT

Vector:
UUUUTTTT
Vector:
1
18
14
Demand: 203

Vector:
1
18
Vec14
tor:
2

De7
mand: 203
7
16
11
17
15
19
10
13
Demand: 287
Demand: 287

Vector:
2
16
19
17
7
15
11
13
10
Demand: 287
CUUUUUUUUUUTTTT

Vector:
3
4
Demand: 37

Vector:
1
18
14
Demand: 203

VeVector:
3
ctor:
5
5
12
VeDemDemand: 2
mand: 74
2
mand: 74
2
7
16
10
19
17
Demand: 184

Vector:
6
8
DemVector:
162
Vector:
4
12
Demand: 63

Vector:
3
5
DemVector:
48
Vector:
9
20
VecDemand: 6
mand: 43
6
mand: 43

Ve8
ctor:
4
De12
and: 162
12
Demand: 63

Vector:
9
ctor:

Ve20
tor:
6

De8
mand: 43
8
Demand: 162

Vector:
9
20
Demand: 43
*    40     9      integral     0    15380.0000    15075.8000       81    1.98%

Vector:
11
13
15
Demand: 103
Adding RCI: 

Vector:
11
13
15
KK(S): 0.858333
K(S): 1
CUUUUUUUUUUTTTT

Vector:
1
18
14
Demand: 203

Vector:
2
11
16
13
19
15
17
7
10
Demand: 287

Vector:
3
5
Demand: 48

Vector:
4
12
Demand: 63

Vector:
6
8
Demand: 162

Vector:
9
20
Demand: 43

User cuts applied:  3

Root node processing (before b&c):
  Real time             =    0.01 sec. (1.59 ticks)
Parallel b&c, 4 threads:
  Real time             =    0.03 sec. (1.35 ticks)
  Sync time (average)   =    0.01 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.04 sec. (2.94 ticks)
Solution status = Optimal
Solution value  = 15380





















BOOOOOM
Cost: 15380

Vector:
1 18 14 
3 5 
4 12 
6 8 
9 20 
10 13 11 15 7 17 19 2 16 

Vector:
0 1 0 1 1 1 1 0 1 1 1 0 1 0 1 0 1 0 0 0 1 
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 
1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 
1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 
1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 
1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 
0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 

Vector:
158 921 0 
139 290 63 
534 145 9 
143 979 13 
8 724 24 
55 983 35 
857 887 70 
746 201 7 
979 845 92 
428 667 10 
707 340 3 
907 285 46 
316 699 39 
834 367 48 
302 301 74 
878 223 9 
347 17 57 
513 233 16 
292 280 66 
497 212 92 
323 669 33 

Vector:
1 18 14 
3 5 
4 12 
6 8 
9 20 
10 13 11 15 7 17 19 2 16 
