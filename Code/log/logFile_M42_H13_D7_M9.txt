Master Thesis Project Philip Salomons i6154933 
Learning to Branch on the Capacitated Vehicle Routing Problem 

**--**--**--**--**--**--**--**--**--**--**--**--**--**--**--**--**--**--**
**--**--**--**--**--**--       LOG File           ---**--**--**--**--**--**

R: 3

Vector:
10000 1123 531 375 949 234 801 228 449 196 281 1178 870 974 1154 948 1074 880 848 896 1185 
1123 10000 598 765 944 1052 413 1175 930 968 961 58 299 174 35 216 80 288 278 300 72 
531 598 10000 226 702 461 289 582 497 405 438 650 340 443 627 417 544 350 319 369 657 
375 765 226 10000 880 411 514 507 284 202 213 823 548 633 798 616 726 557 502 582 832 
949 944 702 880 10000 722 581 800 1163 963 1045 961 688 789 949 745 864 694 775 666 953 
234 1052 461 411 722 10000 677 123 603 334 436 1101 769 887 1078 853 990 779 774 787 1106 
801 413 289 514 581 677 10000 801 769 693 727 451 117 240 432 197 339 126 193 116 451 
228 1175 582 507 800 123 801 10000 659 388 488 1225 893 1010 1202 977 1114 903 896 910 1229 
449 930 497 284 1163 603 769 659 10000 271 171 989 777 834 965 829 910 784 706 815 1002 
196 968 405 202 963 334 693 388 271 10000 102 1025 742 833 1001 813 927 751 702 773 1034 
281 961 438 213 1045 436 727 488 171 102 10000 1020 760 839 995 825 928 768 708 794 1031 
1178 58 650 823 961 1101 451 1225 989 1025 1020 10000 340 216 24 255 112 329 331 335 17 
870 299 340 548 688 769 117 893 777 742 760 340 10000 124 319 85 227 10 101 40 341 
974 174 443 633 789 887 240 1010 834 833 839 216 124 10000 195 45 104 114 131 128 219 
1154 35 627 798 949 1078 432 1202 965 1001 995 24 319 195 10000 235 92 309 307 316 37 
948 216 417 616 745 853 197 977 829 813 825 255 85 45 235 10000 142 74 123 83 256 
1074 80 544 726 864 990 339 1114 910 927 928 112 227 104 92 142 10000 216 226 223 115 
880 288 350 557 694 779 126 903 784 751 768 329 10 114 309 74 216 10000 101 38 331 
848 278 319 502 775 774 193 896 706 702 708 331 101 131 307 123 226 101 10000 139 338 
896 300 369 582 666 787 116 910 815 773 794 335 40 128 316 83 223 38 139 10000 334 
1185 72 657 832 953 1106 451 1229 1002 1034 1031 17 341 219 37 256 115 331 338 334 10000 
Starting...
Creating CPLEX instance!
Number of customers: 21
Sum of all demands: 705
Capacity: 105
KMin: 7
Version identifier: 22.1.1.0 | 2022-11-28 | 9160aff4d
CPXPARAM_TimeLimit                               60
Tried aggregator 2 times.
MIP Presolve eliminated 0 rows and 21 columns.
Aggregator did 190 substitutions.
Reduced MIP has 42 rows, 230 columns, and 840 nonzeros.
Reduced MIP has 210 binaries, 20 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.81 ticks)
Found incumbent of value 31560.000000 after 0.01 sec. (1.53 ticks)
Probing time = 0.00 sec. (0.12 ticks)
Cover probing fixed 0 vars, tightened 20 bounds.
Tried aggregator 1 time.
Detecting symmetries...
Reduced MIP has 42 rows, 230 columns, and 840 nonzeros.
Reduced MIP has 230 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.40 ticks)
Probing time = 0.00 sec. (0.05 ticks)
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 4 threads.
Root relaxation solution time = 0.00 sec. (0.17 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0+    0                        31560.0000        0.0000           100.00%
      0     0    20337.0000     6    31560.0000    20337.0000       24   35.56%
      0     0    20513.0000     6    31560.0000       Cuts: 8       34   35.00%
*     0     0      integral     0    20514.0000       Cuts: 5       35    0.00%
      0     0        cutoff          20514.0000    20514.0000       35    0.00%
Elapsed time = 0.15 sec. (5.96 ticks, tree = 0.01 MB, solutions = 2)

Cover cuts applied:  2
Zero-half cuts applied:  3
Lift and project cuts applied:  4
Gomory fractional cuts applied:  4

Root node processing (before b&c):
  Real time             =    0.15 sec. (5.97 ticks)
Parallel b&c, 4 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.15 sec. (5.97 ticks)
Solution status = Optimal
Solution value  = 20514
0  0  1  1  1  1  1  1  1  1  1  0  1  0  0  1  0  1  1  1  0  
0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  1  0  0  0  0  
1  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  
1  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  
1  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  
1  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  
1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  
1  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  
1  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  
1  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  
1  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  
0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  1  
1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  
0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  1  0  0  
0  1  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  
1  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  
0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  
1  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  
1  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  
1  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  
0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  1  0  0  0  0  
Running...

Vector:
2 4 
3 9 
5 7 
6 19 
8 10 
12 17 
15 13 18 

Vector:
0 0 1 1 1 1 1 1 1 1 1 0 1 0 0 1 0 1 1 1 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 
1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 
1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 
0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 

Vector:
2 4 
3 9 
5 7 
6 19 
8 10 
12 17 
15 13 18 
