Master Thesis Project Philip Salomons i6154933 
Learning to Branch on the Capacitated Vehicle Routing Problem 

**--**--**--**--**--**--**--**--**--**--**--**--**--**--**--**--**--**--**
**--**--**--**--**--**--       LOG File           ---**--**--**--**--**--**

R: 3

Vector:
10000 616 156 501 708 659 423 353 206 593 459 286 581 176 484 363 426 149 350 151 257 
616 10000 497 772 866 210 249 913 823 975 174 381 581 766 162 439 905 623 402 590 473 
156 497 10000 421 790 580 278 508 342 723 361 252 610 333 349 211 571 265 194 248 107 
501 772 421 10000 1203 927 526 789 540 1086 707 666 1031 629 612 336 903 649 377 644 350 
708 866 790 1203 10000 713 881 598 779 313 725 593 289 644 866 967 455 559 931 559 887 
659 210 580 927 713 10000 405 891 860 877 224 377 424 773 327 591 849 616 549 583 594 
423 249 278 526 881 405 10000 760 620 906 200 294 629 593 87 191 790 480 152 451 229 
353 913 508 789 598 891 760 10000 253 345 740 533 631 177 807 716 150 289 703 323 610 
206 823 342 540 779 860 620 253 10000 580 665 483 722 135 687 524 385 271 523 296 422 
593 975 723 1086 313 877 906 345 580 10000 807 618 490 462 921 930 197 458 904 476 831 
459 174 361 707 725 224 200 740 665 807 10000 207 453 598 148 374 731 451 331 418 370 
286 381 252 666 593 377 294 533 483 618 207 10000 370 399 304 381 526 246 342 212 319 
581 581 610 1031 289 424 629 631 722 490 453 370 10000 594 600 749 531 454 709 437 689 
176 766 333 629 644 773 593 177 135 462 598 399 594 10000 647 539 274 158 527 190 433 
484 162 349 612 866 327 87 807 687 921 148 304 600 647 10000 278 823 520 240 488 314 
363 439 211 336 967 591 191 716 524 930 374 381 749 539 278 10000 782 474 43 453 106 
426 905 571 903 455 849 790 150 385 197 731 526 531 274 823 782 10000 313 762 340 678 
149 623 265 649 559 616 480 289 271 458 451 246 454 158 520 474 313 10000 450 33 373 
350 402 194 377 931 549 152 703 523 904 331 342 709 527 240 43 762 450 10000 428 101 
151 590 248 644 559 583 451 323 296 476 418 212 437 190 488 453 340 33 428 10000 355 
257 473 107 350 887 594 229 610 422 831 370 319 689 433 314 106 678 373 101 355 10000 
Starting...
Creating CPLEX instance!

Number of customers: 21
Sum of all demands: 905
Capacity: 135
KMin: 7

Version identifier: 22.1.1.0 | 2022-11-28 | 9160aff4d
CPXPARAM_TimeLimit                               60
Tried aggregator 2 times.
MIP Presolve eliminated 0 rows and 21 columns.
Aggregator did 190 substitutions.
Reduced MIP has 42 rows, 230 columns, and 840 nonzeros.
Reduced MIP has 210 binaries, 20 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.81 ticks)
Found incumbent of value 23022.000000 after 0.01 sec. (1.53 ticks)
Probing time = 0.00 sec. (0.12 ticks)
Cover probing fixed 0 vars, tightened 20 bounds.
Tried aggregator 1 time.
Detecting symmetries...
Reduced MIP has 42 rows, 230 columns, and 840 nonzeros.
Reduced MIP has 230 binaries, 0 generals, 0 SOSs, and 0 indicators.
Presolve time = 0.00 sec. (0.40 ticks)
Probing time = 0.00 sec. (0.05 ticks)
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 4 threads.
Root relaxation solution time = 0.00 sec. (0.21 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0+    0                        23022.0000        0.0000           100.00%
      0     0    13704.0000     8    23022.0000    13704.0000       31   40.47%
*     0+    0                        14188.0000    13704.0000             3.41%
*     0     0      integral     0    13712.0000       Cuts: 9       32    0.00%
      0     0        cutoff          13712.0000    13712.0000       32    0.00%
Elapsed time = 0.14 sec. (4.45 ticks, tree = 0.01 MB, solutions = 3)

Cover cuts applied:  1
Zero-half cuts applied:  4
Lift and project cuts applied:  2
Gomory fractional cuts applied:  2

Root node processing (before b&c):
  Real time             =    0.14 sec. (4.46 ticks)
Parallel b&c, 4 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.14 sec. (4.46 ticks)
Solution status = Optimal
Solution value  = 13712
0  0  1  1  0  0  1  1  1  0  1  1  1  1  0  1  0  1  1  1  1  
0  0  0  0  0  1  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  
1  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  
1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  
0  0  0  0  0  0  0  0  0  1  0  0  1  0  0  0  0  0  0  0  0  
0  1  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  
1  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  
1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  
1  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  
0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  
1  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  
1  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  
1  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  
1  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  
0  1  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  
1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  
0  0  0  0  0  0  0  1  0  1  0  0  0  0  0  0  0  0  0  0  0  
1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  
1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  
1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  
1  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  
Running...

Vector:
2 11 
3 20 
6 14 1 5 10 
7 16 9 4 12 
8 13 
15 18 
17 19 

Vector:
0 0 1 1 0 0 1 1 1 0 1 1 1 1 0 1 0 1 1 1 1 
0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 
0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 
1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 
1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 
0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 

Vector:
2 11 
3 20 
6 14 1 5 10 
7 16 9 4 12 
8 13 
15 18 
17 19 
